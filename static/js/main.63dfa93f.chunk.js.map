{"version":3,"sources":["components/Container/Container.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","title","children","className","s","container","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","preventDefault","newContact","id","shortid","generate","contactForm","label","input","type","autoComplete","onChange","placeholder","pattern","required","submitButton","prototypes","PropTypes","func","Filter","filter","onChangeFilter","ContactList","contacts","onDeleteContact","console","log","list","map","contact","item","buttonDelete","onClick","color","size","App","JSON","parse","window","localStorage","getItem","contactsJson","setContacts","setFilter","useEffect","setItem","stringify","removeCoontactFromList","idRemoveContact","data","currentTarget","normalizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63dfa93f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__227aM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2rzu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2xVeW\",\"label\":\"ContactForm_label__2hCTq\",\"input\":\"ContactForm_input__23IW4\",\"submitButton\":\"ContactForm_submitButton__2aQVa\"};","import PropTypes from 'prop-types';\nimport s from '../Container/Container.module.css';\n\nfunction Container({ title, children }) {\n  return (\n    <div className={s.container}>\n      <h2> {title}</h2>\n\n      {children}\n    </div>\n  );\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\n\nimport React, { useState } from 'react';\nimport shortid from 'shortid';\nimport s from '../ContactForm/ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      name: name,\n      number: number,\n      id: shortid.generate(),\n    };\n\n    onSubmit(newContact);\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.contactForm}>\n      <label className={s.label}>\n        Name:\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"off\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Tom Smit\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={s.label}>\n        Number:\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          autoComplete=\"off\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"050-50-50\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <input className={s.submitButton} type=\"submit\" value=\"Add contact\" />\n    </form>\n  );\n  // }\n}\n\nContactForm.prototypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from '../Filter/Filter.module.css';\n\nconst Filter = ({ filter, onChangeFilter }) => {\n  return (\n    <label>\n      Find contact by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        autoComplete=\"off\"\n        value={filter}\n        onChange={onChangeFilter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n};\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from '../ContactList/ContactList.module.css';\nimport { TiUserDeleteOutline } from 'react-icons/ti';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  console.log(contacts);\n\n  return (\n    <div>\n      <ul className={s.list}>\n        {contacts.map(contact => (\n          <li className={s.item} key={contact.id}>\n            <p>\n              <span>{contact.name}:</span> <span>{contact.number}</span>\n            </p>\n\n            <button\n              className={s.buttonDelete}\n              type=\"button\"\n              onClick={() => onDeleteContact(contact.id)}\n            >\n              <TiUserDeleteOutline color=\"red\" size=\"18px\" />\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nContactList.propTypes = {\n  // contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func,\n};\nexport default ContactList;\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\n\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport contactsJson from './contacts.json';\n\nfunction App() {\n  \n  const [contacts, setContacts] = useState(\n    () => JSON.parse(window.localStorage.getItem('contacts')) ?? contactsJson,\n  );\n\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandler = data => {\n    return setContacts([data, ...contacts]);\n  };\n\n  const removeCoontactFromList = idRemoveContact => {\n    return setContacts([\n      ...contacts.filter(({ id }) => id !== idRemoveContact),\n    ]);\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const visibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n\n      <Container>\n        <ContactForm onSubmit={formSubmitHandler}></ContactForm>\n      </Container>\n\n      <Container title=\"Contacts\">\n        <Filter filter={filter} onChangeFilter={changeFilter}>\n          {' '}\n        </Filter>\n\n        {filter === '' ? (\n          <ContactList\n            contacts={contacts}\n            onDeleteContact={removeCoontactFromList}\n          ></ContactList>\n        ) : (\n          <ContactList\n            contacts={visibleContacts()}\n            onDeleteContact={removeCoontactFromList}\n          ></ContactList>\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2d5xA\",\"item\":\"ContactList_item__2uxAc\",\"buttonDelete\":\"ContactList_buttonDelete__WeDbC\"};"],"sourceRoot":""}