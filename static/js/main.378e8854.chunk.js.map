{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","components/Container/Container.js","redux/phonebook/phonebook-action.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","redux/counter/counter-actions.js","components/Counter/Counter.js","App.js","redux/counter/counter-reducers.js","redux/phonebook/phonebook-reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","title","children","className","s","container","addContact","createAction","payload","name","number","id","shortid","generate","deleteContact","changeFilter","ContactForm","onSubmit","useState","setName","setNumber","handleChange","e","target","value","preventDefault","contactForm","label","input","type","autoComplete","onChange","placeholder","pattern","required","submitButton","prototypes","PropTypes","func","connect","dispatch","actions","state","phoneBook","filter","currentTarget","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","contact","includes","contacts","onDeleteContact","list","map","item","buttonDelete","onClick","color","size","increment","decrement","counter","step","onIncrement","onDecrement","App","valueReducer","createReducer","stepReduser","_","counterReducer","combineReducers","initialState","JSON","parse","window","localStorage","getItem","contactsJson","contactsReducer","newStateAdd","setItem","stringify","addNewContact","newStateDelete","filterReducer","phoneBookReducer","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.378e8854.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2d5xA\",\"item\":\"ContactList_item__2uxAc\",\"buttonDelete\":\"ContactList_buttonDelete__WeDbC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__227aM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2rzu6\"};","import PropTypes from 'prop-types';\nimport s from '../Container/Container.module.css';\n\nfunction Container({ title, children }) {\n  return (\n    <div className={s.container}>\n      <h2> {title}</h2>\n\n      {children}\n    </div>\n  );\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\n\n const addContact = createAction('phonebook/Add', ({ name, number })  => ({\n     payload: {\n      name: name,\n      number: number,\n      id: shortid.generate(),\n    }  \n}));\n\nconst deleteContact = createAction('phonebook/Delete'); \nconst changeFilter = createAction('filter/ChangeFilter');\n \nexport  { addContact, deleteContact, changeFilter };\n\n\n// ===== react redux ============\n\n// import shortid from 'shortid';\n// import phoneBookTypes from './phonebook-types';\n\n\n// export const addContact = ({ name, number }) => ({\n//   type: phoneBookTypes.ADD,\n//   payload: {\n//     name: name,\n//     number: number,\n//     id: shortid.generate(),\n//   },\n// });\n\n// export const deleteContact = idContact => ({\n//   type: phoneBookTypes.DELETE,\n//   payload: idContact,\n// });\n\n\n// export const changeFilter = value => ({\n//   type: phoneBookTypes.CHANGE_FILTER,\n//   payload: value,\n// });","import PropTypes from 'prop-types';\n\nimport React, { useState } from 'react';\nimport s from '../ContactForm/ContactForm.module.css';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/phonebook/phonebook-action';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      name: name,\n      number: number,\n      id: '',\n    };\n\n    onSubmit(newContact);\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.contactForm}>\n      <label className={s.label}>\n        Name:\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"off\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Tom Smit\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={s.label}>\n        Number:\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          autoComplete=\"off\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"050-50-50\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <input className={s.submitButton} type=\"submit\" value=\"Add contact\" />\n    </form>\n  );\n}\n\nContactForm.prototypes = {\n  onSubmit: PropTypes.func,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) =>\n    dispatch(actions.addContact({ name, number })),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\nimport s from '../Filter/Filter.module.css';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/phonebook/phonebook-action';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Find contact by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        autoComplete=\"off\"\n        value={value}\n        onChange={onChange}\n        // onChange = {e = onChange(e.target.value) }\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  value: state.phoneBook.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(actions.changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport s from '../ContactList/ContactList.module.css';\nimport { TiUserDeleteOutline } from 'react-icons/ti';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/phonebook/phonebook-action';\n\nfunction ContactList({ contacts, onDeleteContact, filter }) {\n  return (\n    <div>\n      <ul className={s.list}>\n        {contacts.map(contact => (\n          <li className={s.item} key={contact.id}>\n            <p>\n              <span>{contact.name}:</span> <span>{contact.number}</span>\n            </p>\n\n            <button\n              className={s.buttonDelete}\n              type=\"button\"\n              onClick={() => onDeleteContact(contact.id)}\n            >\n              <TiUserDeleteOutline color=\"red\" size=\"18px\" />\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase(); \n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\nconst mapStateToProps = ({ phoneBook: { contacts, filter } }) => ({\n  contacts: getVisibleContacts(contacts, filter),\n});\n\n// const mapStateToProps = state => {\n//   const { filter, contacts } = state.phoneBook;\n//   const normalizedFilter = filter.toLowerCase();\n//   const visibleContacts =  contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter),\n//   );\n\n//   return {\n//     contacts: visibleContacts,\n//   }\n// };\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { createAction } from '@reduxjs/toolkit';\n\nconst increment = createAction('counter/Increment')\n\n const decrement = createAction('counter/Decrement');\n\nexport { increment, decrement };\n  \n  // =======react redux============\n\n// import actionTypes from './counter-types';\n\n// export const increment = value => ({\n//   type: actionTypes.INCREMENT,\n//   payload: value,\n// });\n\n// export const decrement = value => ({\n//   type: actionTypes.DECREMENT,\n//   payload: value,\n// });\n","import { connect } from 'react-redux';\nimport * as actions from '../../redux/counter/counter-actions';\n\nfunction Counter({ value, step, onIncrement, onDecrement }) {\n  return (\n    <div>\n      <button type=\"button\" onClick={() => onDecrement(step)}>\n        -\n      </button>\n\n      {value}\n\n      <button type=\"button\" onClick={() => onIncrement(step)}>\n        +\n      </button>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  value: state.counter.value,\n  step: state.counter.step,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onIncrement: step => dispatch(actions.increment(step)),\n  onDecrement: step => dispatch(actions.decrement(step)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n","import './App.css';\n\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\n\nimport Counter from './components/Counter';\n\nfunction App() {  \n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n\n      <Container>\n        <ContactForm        \n        >\n        </ContactForm>\n      </Container>\n\n      <Container title=\"Contacts\">\n        <Filter/>    \n        <ContactList/>\n        \n      </Container>\n      <Container>\n\n        <Counter />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './counter-actions';\n\nconst valueReducer = createReducer(0, {\n  [actions.increment]: (state, { payload }) => state + payload,\n  [actions.decrement]: (state, { payload }) => state - payload,\n  \n});\n\nconst stepReduser = createReducer(1, {\n  [actions.increment]: (state, _) => state, \n});\n\n\nconst counterReducer = combineReducers({\n  value: valueReducer,\n  step: stepReduser,\n});\n\nexport default counterReducer;\n\n\n// ===========react redux=========\n\n// import { combineReducers } from 'redux';\n// import actionTypes from './counter-types';\n\n// const valueReducer = (state = 0, { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.INCREMENT:\n//       return state + payload;\n\n//     case actionTypes.DECREMENT:\n//       return state - payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const stepReduser = (state = 1, action) => state;\n\n// const counterReducer = combineReducers({\n//   value: valueReducer,\n//   step: stepReduser,\n// });\n\n// export default counterReducer;","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport * as actions from './phonebook-action';\nimport contactsJson from '../../contacts.json';\n\n\nconst initialState =\n  JSON.parse(window.localStorage.getItem('contacts')) ?? contactsJson;\n\nconst addNewContact = ( state, payload) => {\nconst newStateAdd = [payload, ...state];\n      window.localStorage.setItem('contacts', JSON.stringify(newStateAdd));\n      return newStateAdd;\n}\n\nconst deleteContact = ( state, payload) => {\n   const newStateDelete = state.filter(({ id }) => id !== payload);\n      window.localStorage.setItem('contacts', JSON.stringify(newStateDelete));\n      return newStateDelete;\n}\n\nconst contactsReducer = createReducer(initialState, {\n  [actions.addContact]: (state, { payload }) => addNewContact(state, payload),\n  [actions.deleteContact]: (state, { payload }) => deleteContact(state, payload),\n});\n\n\nconst filterReducer = createReducer('', {\n  [actions.changeFilter]:(_,{payload})=> payload,\n});\n    \nconst phoneBookReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n\nexport default phoneBookReducer;\n\n// ===== react redux ============\n\n// import { combineReducers } from 'redux';\n// import phoneBookTypes from './phonebook-types';\n\n// import contactsJson from '../../contacts.json';\n\n// const initialState =\n//   JSON.parse(window.localStorage.getItem('contacts')) ?? contactsJson;\n\n// const contactsReducer = (state = initialState, { type, payload }) => {\n\n//   switch (type) {\n//     case phoneBookTypes.ADD:\n//       const newStateAdd = [payload, ...state];\n//       window.localStorage.setItem('contacts', JSON.stringify(newStateAdd));\n//       return newStateAdd;\n\n//     case phoneBookTypes.DELETE:\n//       const newStateDelete = state.filter(({ id }) => id !== payload);\n//       window.localStorage.setItem('contacts', JSON.stringify(newStateDelete));\n//       return newStateDelete;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filterReducer = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case phoneBookTypes.CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const phoneBookReducer = combineReducers({\n//   contacts: contactsReducer,\n//   filter: filterReducer,\n// });\n\n// export default phoneBookReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport counterReducer from './counter/counter-reducers';\nimport phoneBookReducer from './phonebook/phonebook-reducers';\n\n// console.log(process.env.NODE_ENV);//development OR PRODUCTION\nconst middleware = [...getDefaultMiddleware(), logger]\nconst store = configureStore({\n  reducer: {\n  counter: counterReducer,\n    phoneBook: phoneBookReducer,   \n  },\n  middleware: middleware,\n  // devTools: process.env.NODE_ENV === 'development',\n});\n\n\nexport default store;\n\n// ====== react redux============\n\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import { createStore, combineReducers } from 'redux';\n// import counterReducer from './counter/counter-reducers';\n// import phoneBookReducer from './phonebook/phonebook-reducers';\n\n// const rootReducer = combineReducers({\n//   counter: counterReducer,\n//   phoneBook: phoneBookReducer,\n// });\n\n// // devTools: process.env.NODE_ENV === 'development',\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// export default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\n\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2xVeW\",\"label\":\"ContactForm_label__2hCTq\",\"input\":\"ContactForm_input__23IW4\",\"submitButton\":\"ContactForm_submitButton__2aQVa\"};"],"sourceRoot":""}