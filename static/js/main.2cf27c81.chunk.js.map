{"version":3,"sources":["components/Container/Container.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.js","redux/phonebook/phonebook-types.js","components/ContactForm/ContactForm.js","redux/phonebook/phonebook-action.js","components/Filter/Filter.js","components/ContactList/ContactList.js","redux/counter/counter-types.js","components/Counter/Counter.js","redux/counter/counter-actions.js","App.js","redux/counter/counter-redusers.js","redux/phonebook/phonebook-redusers.js","redux/store.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","title","children","className","s","container","phoneBookTypes","ADD","DELETE","SELECT","CHANGE_FILTER","APPLY_FILTER","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","preventDefault","id","contactForm","label","input","type","autoComplete","onChange","placeholder","pattern","required","submitButton","prototypes","PropTypes","func","connect","dispatch","payload","shortid","generate","actions","state","phoneBook","filter","currentTarget","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","contact","includes","contacts","onDeleteContact","list","map","item","buttonDelete","onClick","color","size","actionTypes","INCREMENT","DECREMENT","counter","step","onIncrement","onDecrement","App","counterReducer","combineReducers","initialState","JSON","parse","window","localStorage","getItem","contactsJson","phoneBookReducer","console","log","newStateAdd","setItem","stringify","newStateDelete","rootReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cf27c81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__227aM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2rzu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2xVeW\",\"label\":\"ContactForm_label__2hCTq\",\"input\":\"ContactForm_input__23IW4\",\"submitButton\":\"ContactForm_submitButton__2aQVa\"};","import PropTypes from 'prop-types';\nimport s from '../Container/Container.module.css';\n\nfunction Container({ title, children }) {\n  return (\n    <div className={s.container}>\n      <h2> {title}</h2>\n\n      {children}\n    </div>\n  );\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","const phoneBookTypes = {\r\n    \r\n    ADD: 'phonebook/Add',     \r\n    DELETE: 'phonebook/Delete',\r\n    SELECT: 'phonebook/Select',\r\n\r\n    CHANGE_FILTER: 'filter/ChangeFilter',  \r\n    \r\n    APPLY_FILTER: 'filter/ApplyFilter',  \r\n}; \r\n\r\n\r\nexport default phoneBookTypes;","import PropTypes from 'prop-types';\n\nimport React, { useState } from 'react';\nimport s from '../ContactForm/ContactForm.module.css';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/phonebook/phonebook-action';\n\n\nfunction ContactForm({ onSubmit }) {\n\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      name: name,\n      number: number,\n      id:\"\"\n    };\n\n    onSubmit(newContact);\n    reset();\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className={s.contactForm}\n    >\n      <label className={s.label}>\n        Name:\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"off\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Tom Smit\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={s.label}>\n        Number:\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          autoComplete=\"off\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"050-50-50\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <input className={s.submitButton} type=\"submit\" value=\"Add contact\" />\n    </form>\n  );\n\n}\n\nContactForm.prototypes = {\n  onSubmit: PropTypes.func,\n};\n\n\nconst mapDispatchToProps = dispatch => ({ \n  onSubmit: ({ name, number }) => dispatch(actions.addContact({ name, number })),   \n});\n\nexport default connect(null,mapDispatchToProps)(ContactForm);\n","import shortid from 'shortid';\r\nimport phoneBookTypes from \"./phonebook-types\";\r\n\r\n\r\n\r\n// const deleteContact = value => ({\r\n//   type: actions.DELETE,\r\n//   payload: value,\r\n// });\r\n\r\nexport const addContact =( {name, number}) => ({\r\n    type: phoneBookTypes.ADD,\r\n    payload: {\r\n        name: name,\r\n        number: number,    \r\n        id: shortid.generate(),     \r\n    },\r\n});\r\n\r\nexport const deleteContact = idContact => ({\r\n    type: phoneBookTypes.DELETE,   \r\n    payload: idContact,\r\n});\r\n\r\n// export const selectContact = value => ({\r\n//     type: phoneBookTypes.SELECT,\r\n//     payload: value,\r\n// });\r\n\r\n// export const changeFilter = event => ({\r\n//   type: phoneBookTypes.CHANGE_FILTER,\r\n//   payload: event.target.value,\r\n// });\r\n\r\nexport const changeFilter = value => ({\r\n  type: phoneBookTypes.CHANGE_FILTER,\r\n  payload: value,\r\n});\r\n ","import PropTypes from 'prop-types';\nimport s from '../Filter/Filter.module.css';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/phonebook/phonebook-action';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Find contact by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        autoComplete=\"off\"\n        value={value}\n        \n        onChange={onChange}\n        // onChange = {e = onChange(e.target.value) }\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n};\n\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\n\nconst mapStateToProps = state => ({\n  value: state.phoneBook.filter\n \n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: (e) => dispatch(actions.changeFilter(e.currentTarget.value))\n  \n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport s from '../ContactList/ContactList.module.css';\nimport { TiUserDeleteOutline } from 'react-icons/ti';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/phonebook/phonebook-action';\n\nfunction ContactList({contacts,  onDeleteContact,filter }) {\n\n  return (\n    \n    <div>\n      \n      <ul className={s.list}>\n         {contacts.map(contact => (\n            <li className={s.item} key={contact.id}>\n              <p>\n                <span>{contact.name}:</span> <span>{contact.number}</span>\n              </p>\n\n              <button\n                className={s.buttonDelete}\n                type=\"button\"\n                onClick={() => onDeleteContact(contact.id)}\n              \n              >\n                <TiUserDeleteOutline color=\"red\" size=\"18px\" />\n              </button>\n            </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func,\n};\n\n  const getVisibleContacts = (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    \n    return allContacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    )\n    \n  };\n  const mapStateToProps = ({phoneBook:{contacts, filter}}) => ({   \n  \n  contacts: getVisibleContacts (contacts, filter)\n             \n});\n\n// const mapStateToProps = state => {  \n//   const { filter, contacts } = state.phoneBook;\n//   const normalizedFilter = filter.toLowerCase();\n//   const visibleContacts =  contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter),\n//   );\n  \n//   return {\n//     contacts: visibleContacts,\n//   }             \n// };\n\n\nconst mapDispatchToProps = dispatch => ({\n  \n  onDeleteContact: (id) => dispatch(actions.deleteContact(id)),  \n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactList);\n","\r\nconst actionTypes = {\r\n     INCREMENT: 'counter/Increment',\r\n    DECREMENT: 'counter/Decrement',\r\n \r\n}\r\n\r\nexport default actionTypes;","\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/counter/counter-actions';\r\n\r\nfunction Counter({ value, step, onIncrement, onDecrement }) {\r\n\r\n  return (\r\n    <div >      \r\n          <button\r\n              type=\"button\"\r\n              onClick={()=> onDecrement(step)}\r\n              >\r\n              -      \r\n              \r\n          </button>\r\n          \r\n          {value}          \r\n          \r\n          <button\r\n              type=\"button\"\r\n              onClick={()=>onIncrement(step)}             \r\n          >\r\n              +             \r\n              \r\n          </button>          \r\n      </div>      \r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    value: state.counter.value,    \r\n    step: state.counter.step,           \r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onIncrement: (step) => dispatch(actions.increment(step)),\r\n    onDecrement: (step) => dispatch(actions.decrement(step)),\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Counter);","import actionTypes from './counter-types';\r\n\r\nexport const increment = value => ({\r\n    type: actionTypes.INCREMENT,\r\n    payload: value,\r\n\r\n});\r\n\r\nexport const decrement = value => ({\r\n    type: actionTypes.DECREMENT,\r\n    payload: value,\r\n\r\n});","import './App.css';\nimport React, { useState, useEffect } from 'react';\n\n\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport contactsJson from './contacts.json';\n\n\nimport Counter from './components/Counter';\n\nfunction App() {\n  // const [contacts, setContacts] = useState(\n  //   () => JSON.parse(window.localStorage.getItem('contacts')) ?? contactsJson,\n  // );\n\n  // const [filter, setFilter] = useState('');\n  \n  // useEffect(() => {\n  //   window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  // const formSubmitHandler = data => {\n  //   return setContacts([data, ...contacts]);\n  // };\n\n  // const removeCoontactFromList = idRemoveContact => {\n  //   return setContacts([\n  //     ...contacts.filter(({ id }) => id !== idRemoveContact),\n  //   ]);\n  // };\n\n  // const changeFilter = e => {\n  //   setFilter(e.currentTarget.value);\n  // };\n\n  // const visibleContacts = () => {\n  //   const normalizedFilter = filter.toLowerCase();\n\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normalizedFilter),\n  //   );\n  // };\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n\n      <Container>\n        <ContactForm\n          // onSubmit={formSubmitHandler}\n        ></ContactForm>\n      </Container>\n\n      <Container title=\"Contacts\">\n        <Filter\n          // filter={filter}\n        // onChangeFilter={changeFilter}\n        >\n          {/* {' '} */}\n        </Filter>\n\n        {/* {filter === '' ? ( */}\n          <ContactList\n            // contacts={contacts}\n            // onDeleteContact={removeCoontactFromList}\n          ></ContactList>\n        {/* ) : ( */}\n          {/* <ContactList */}\n             {/* contacts={visibleContacts()} */}\n             {/* onDeleteContact={removeCoontactFromList} */}\n          {/* ></ContactList> */}\n        {/* )} */}\n      </Container>\n      <Container>\n        <Counter          \n        />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import {  combineReducers  } from 'redux';\r\nimport actionTypes from './counter-types'\r\n\r\n\r\nconst valueReducer = (state = 0, { type, payload }) => {\r\n\r\n    switch (type) {\r\n        case actionTypes.INCREMENT:\r\n            return state + payload;\r\n            \r\n        \r\n        case actionTypes.DECREMENT:\r\n            return state - payload;\r\n                \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst stepReduser = ( state=1, action ) => state;\r\n\r\n\r\n\r\nconst counterReducer = combineReducers({\r\n    value: valueReducer,\r\n    step: stepReduser,\r\n});\r\n\r\nexport default counterReducer;","import {  combineReducers  } from 'redux';\r\nimport phoneBookTypes from './phonebook-types';\r\n\r\nimport contactsJson from '../../contacts.json';\r\n\r\nconst initialState = JSON.parse(window.localStorage.getItem('contacts')) ?? contactsJson;\r\n\r\n\r\nconst contactsReduser = (state = initialState, { type, payload }) => {\r\n    console.log(state)\r\n    switch (type) {\r\n        \r\n        case phoneBookTypes.ADD:\r\n            const newStateAdd = [payload, ...state];\r\n            window.localStorage.setItem('contacts', JSON.stringify(newStateAdd));\r\n            return newStateAdd;\r\n             \r\n        \r\n        case phoneBookTypes.DELETE:\r\n            const newStateDelete = state.filter(({ id }) => id !== payload);\r\n            window.localStorage.setItem('contacts', JSON.stringify(newStateDelete));\r\n            return newStateDelete;          \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst filterReduser = (state = '', { type, payload }) => {    \r\n    switch (type) {        \r\n         case phoneBookTypes.CHANGE_FILTER:\r\n            return  payload;\r\n\r\n    default:\r\n      return state;\r\n    }\r\n}\r\n\r\nconst phoneBookReducer = combineReducers({  \r\n    contacts: contactsReduser,\r\n    filter: filterReduser\r\n});\r\n\r\nexport default phoneBookReducer;\r\n","import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createStore, combineReducers  } from 'redux';\r\nimport counterReducer from './counter/counter-redusers';\r\nimport phoneBookReducer from './phonebook/phonebook-redusers';\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    counter: counterReducer,\r\n    phoneBook: phoneBookReducer,\r\n})\r\n\r\n// devTools: process.env.NODE_ENV === 'development',\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\n\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />      \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2d5xA\",\"item\":\"ContactList_item__2uxAc\",\"buttonDelete\":\"ContactList_buttonDelete__WeDbC\"};"],"sourceRoot":""}